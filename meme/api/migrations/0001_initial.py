# Generated by Django 4.0.3 on 2022-03-31 17:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='invite_code',
            fields=[
                ('inviteID', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('taken', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visibility', models.CharField(max_length=36)),
                ('anonymous', models.BooleanField()),
                ('view_count', models.IntegerField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('is_story', models.BooleanField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.post')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionContent', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_followers', models.IntegerField()),
                ('num_feeds', models.IntegerField()),
                ('num_stories', models.IntegerField()),
                ('trending', models.BooleanField()),
                ('topicName', models.CharField(max_length=45)),
                ('abstract', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=36)),
                ('password', models.CharField(max_length=36)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='feed_id', serialize=False, to='api.post')),
                ('content', models.CharField(max_length=200)),
                ('emoji', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='story_id', serialize=False, to='api.post')),
                ('title', models.CharField(default='no title', max_length=100)),
                ('content', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='userResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=255)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userlogin')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=15)),
                ('bio', models.CharField(max_length=100)),
                ('school', models.CharField(max_length=45)),
                ('degree', models.CharField(max_length=45)),
                ('num_following', models.IntegerField()),
                ('num_followers', models.IntegerField()),
                ('trophy', models.CharField(max_length=45)),
                ('wechat', models.CharField(max_length=45)),
                ('instagram', models.CharField(max_length=45)),
                ('verified', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userlogin')),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='api.userlogin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='api.userlogin')),
            ],
        ),
        migrations.CreateModel(
            name='TopicRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('topicName', models.CharField(max_length=45)),
                ('topicAbstract', models.CharField(max_length=255)),
                ('votes', models.IntegerField()),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topicModerator', to='api.userlogin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topicCreator', to='api.userlogin')),
            ],
            options={
                'ordering': ['votes'],
            },
        ),
        migrations.CreateModel(
            name='TopicModerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topicModerated', to='api.topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderator', to='api.userlogin')),
            ],
        ),
        migrations.AddField(
            model_name='topic',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userlogin'),
        ),
        migrations.AddField(
            model_name='post',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.topic'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userlogin'),
        ),
        migrations.CreateModel(
            name='FollowTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topicFollowed', to='api.topic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userFollowing', to='api.userlogin')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('emoji', models.IntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userlogin')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.feed')),
            ],
        ),
    ]
